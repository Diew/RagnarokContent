//===== Alayne Scripts =======================================
//= Odin Wisdom Instance
//===== By: ================================================== 
//= Alayne
//===== Current Version: ===================================== 
//= 1.0
//===== Compatible With: ===================================== 
//= rAthena SVN
//= hercules SVN
//===== Description: ========================================= 
//
//= An instance based over Odin, the Father of All Gods
//
//===== Todo Remaining: ======================================
//
//===== Additional Comments: =================================
//
//============================================================

prontera,148,187,5	script	Odin Wisdom::alafhen	4_M_DEWZATICHIEF,{
OnStart:
	set .@party_id, getcharid(1);
	set .@ow_leader, ( getcharid(0) == getpartyleader(.@party_id,2) );

	set $instance_ow_id, -1;
	
	//RATHENA
	//set .@has_instance, $instance_ow_id == getcharid(1);
	//HERCULES
	set .@has_instance, has_instance($owMap$[0], $ow_instance);
	
	set .@instance_delay, ( instance_delay_ow - gettimetick(2) );

	set .@npcname$, "[" + .instance_name$ + "]";
	mes .@npcname$;
	mes "This is the entrance of " + .instance_name$ + ".";
	mes "The more you look at it, the more you feel something curious.";
	if( .@instance_delay > 0 )
	{		
		set .@hours, .@instance_delay / (60 * 60);
		set .@remaining, .@instance_delay - .@hours * (60 * 60);
		set .@minutes, .@remaining / (60);
		set .@remaining, .@remaining - .@minutes * (60);
		set .@seconds, .@remaining;
		mes "You have to wait : ^FF0000"+ .@hours +" Hours, " + .@minutes + " Minutes and " + .@seconds + " Seconds.^000000";
		//close;
	}
	if (.requiredItem != -1  && countitem(.requiredItem) < 1)
	{
		mes "You decide to step back.";
		mes "There's something strange in there. It's better to get prepared.";
		close;
	}
	switch( select( 
		(( .@party_id && .@ow_leader && !.@has_instance )?"Create " + .instance_name$:""),
		(( .@party_id && .@has_instance )?"Enter " + .instance_name$:""),
		(( .@party_id && .@ow_leader && .@has_instance )?"Destroy " + .instance_name$:""),
	"Nevermind."
		)){
	case 1:
		getpartymember .@party_id,2;
		if( .min_party_member >= 1 ){
			set .@origin, getcharid(3);
			set .@gettimetick, gettimetick(2);
			for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
				if( attachrid( $@partymemberaid[.@i] ) ){
					set .@member_count, .@member_count + 1;
					if( BaseLevel < .base_level[0] || BaseLevel > .base_level[1] ) set .@fail, .@fail|1;
					if( Zeny < .instance_zeny ) set .@fail, .@fail|2;
					if( instance_delay_ow > .@gettimetick ) set .@fail, .@fail|4;
					if( .@fail ){
						set .@name$, strcharinfo(0);
						//break;
					}
				}
			attachrid( .@origin );
		}
		
		//check that nobody else is inside
		for(set .@i,1; .@i<=getarraysize($owMap$); set .@i,.@i+1)
		{
			if (getmapusers(instance_mapname($owMap$[.@i], $ow_instance)) > 0) {
				mes "Another team is already in the " + .instance_name$ + ". I can't send you there, sorry.";
				close;
			}
		}
		
		//clean any previously remaining instance
		if($ow_instance != -1)
		{
			instance_destroy $ow_instance;
			set $ow_instance, -1;
			set $instance_ow_id, -1;
		}
		
		if( .@name$ != "" && .@fail ){
			mes "^FF0000[ Failed ]^000000";
			mes "^0055FF"+.@name$+"^000000, You cannot join right now.";
			mes " ";
			mes "^FF0000[ Reason: ]^000000";
			if( .@fail & 1 ) mes "^777777You must be Level: "+.base_level[0]+" - "+.base_level[1]+"^000000";
			if( .@fail & 2 ) mes "^777777You need "+ .instance_zeny +" Zeny^000000";
			if( .@fail & 4 ) mes "^777777You still have cooldown.^000000";
			//break;
		}
		
		getpartymember getcharid(1),0;
		if (instance_check_party(.@party_id, .min_party_member, .base_level[0], .base_level[1]) == 0) {
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "Make or join a party with at least "+.min_party_member+" member and try again, with level between " +.base_level[0] + " and " + .base_level[1] + ".";
		}
		else{
			//RATHENA
			//set $ow_instance, instance_create( .instance_name$ );
			//HERCULES
			set $ow_instance, instance_create(.instance_name$, .@party_id, IOT_PARTY);
			if( $ow_instance < 0 ) {
				npctalk .instance_name$ + " reservation failed.";
				mes "^0000FF"+ .instance_name$ +" ^000000 - Reservation Failed!";
				close;
			}
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "^0000FF"+.instance_name$+" ^000000 - Reserved";
			set .@gettimetick, gettimetick(2);
			getpartymember .@party_id,2;
			for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
				if( attachrid( $@partymemberaid[.@i] ) ){
					set instance_delay_ow, ( .@gettimetick + ( .instance_delay ));
					set Zeny, Zeny - .instance_zeny;
					dispbottom "["+.instance_name$+"] -"+ .instance_zeny +" Zeny and Instance Cooldown Applied.";
				}
			attachrid( .@origin );
			npctalk .instance_name$ + " has been generated for Party - " + getpartyname( .@party_id );
			
			set $instance_ow_id, getcharid(1);
			
			//HERCULES
			for( set .@i, 0; .@i < getarraysize($owMap$); set .@i,.@i+1 )
			{
				if( instance_attachmap( $owMap$[.@i],$ow_instance ) == "" ){
					setmapflag $owMap$[.@i],mf_zone,"Memorial Dungeon";
					npctalk .instance_name$ + " reservation failed due to map attach failure.";
					mes "- ^FF0000Reservation Failed!^000000";
					instance_destroy( $ow_instance );
					set $ow_instance, -1;
					set $instance_ow_id, -1;
					close;
				}
			}
			instance_set_timeout .instance_delay,300,$ow_instance;
			instance_init($ow_instance);
			
			//disable unused npcs for now
 		}
	case 2:
		if( $instance_ow_id != getcharid(1)){
			mes .instance_name$ + " doesn't exist for Party - "+getpartyname( .@party_id );
		}
		else{
			//RATHENA
			//switch(instance_enter(.instance_name$)) {
			//	default:
			//		mes "An unknown error has occurred.";
			//		close;
			//	case 2:
			//		mes "The memorial dungeon " + .instance_name$ + " does not exist.";
			//		mes "The party leader did not generate the dungeon yet.";
			//		close;
			//	case 1:
			//		mes "You can enter the dungeon after making the party.";
			//		close;
			//	case 0:
			//		mapannounce $owMap$[0], strcharinfo(0)+" from party, " +getpartyname( .@party_id )+", lr entering the dungeon, "+.instance_name$+".",bc_map,"0x00ff99",FW_NORMAL,12;
			//		end;
			//}
			
			//HERCULES
			if( has_instance( $owMap$[0] ) == "" ){
				mes "Odin Wisdom doesnt exist for Party - "+getpartyname( .@party_id );
			}
			else{
				warp $owMap$[0],131,107;
				instance_announce $ow_instance, getpartyname(getcharid(1))+"  entered in the "+.instance_name$+"!",bc_map,"0x00ff99";
			}
		}
		break;
	case 3:
		mes .instance_name$ + " Destroyed.";
		instance_destroy $ow_instance;
		set $ow_instance, -1;
		set $instance_ow_id, -1;
		break;
	default: 
		break;
}
close;

OnInit:
	setarray .base_level[0],130, 175;
	setarray $owMap$[0],"1@tnm2";
	set .map_size, getarraysize( $owMap$ );
	set .min_party_member, 1;
	set .instance_zeny, 0;
	set .instance_delay, 7200;
	set $ow_timer_delay, 3600; //1 hour to clean the instance
	set .instance_name$, "Odin Wisdom";
	set $ow_instance, -1;
	set $instance_ow_id, -1;
	set .requiredItem, -1; //define the required item to enter in the instance. Leave to -1 to disable
	set $owEnergyItem, 512;
	end;
}


1@tnm2,101,107,4	script	odin_wisdom	HIDDEN_WARP_NPC,2,2,{
function summon_normal;
function summon_guardian;
function summon_special;
end;

OnInstanceInit:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );
	
	set $instance_ow_level, 0;
	set .max_ow_level, 9;
	
	set $OdinId, -1;	
	set .timerCount, 0;
	setarray .smonster,2564,2546,2564,2546;
	set .killedSpecial, 0;
	 
	initnpctimer;
	end;

function	summon_normal	{
	set .@map$, getarg(0);
	set .@npcname$, getarg(1);
	set .@increaseFloor, getarg(2);
	
	if(.@increaseFloor == 1)
	{
		$instance_ow_level++;
	}
	
	setarray .@coordinate[0],110,162,156,112;
	
	switch( $instance_ow_level ){
		case 0:
			//Fire Needle
			setarray .@monster,3100;
			setarray .@amount,20;
			break;
		case 1:
			//Unmovable Frost
			setarray .@monster,3100;
			setarray .@amount,20;
			break;
		case 2:
			//Past Memories			
			setarray .@monster,1106,1092,1013;
			setarray .@amount,20,5,60;
			break;
		case 3:
			//Transformation			
			setarray .@monster,3092,1252,1106,1092,1013;
			setarray .@amount,1,1,20,5,60;
			break;
		case 4:
			//Legacy			
			setarray .@monster,3092,1252,1106,1092,1013;
			setarray .@amount,1,1,20,5,60;
			break;
		case 5:
			//Vitality			
			setarray .@monster,3092,1252,1106,1092,1013;
			setarray .@amount,1,1,20,5,60;
			break;
		case 6:
			//Move			
			setarray .@monster,3092,1252,1106,1092,1013;
			setarray .@amount,1,1,20,5,60;
			break;
		case 7:
			//Daylight			
			setarray .@monster,3092,1252,1106,1092,1013;
			setarray .@amount,1,1,20,5,60;
			break;
		case 8:
			//Roots			
			setarray .@monster,3092,1252,1106,1092,1013;
			setarray .@amount,1,1,20,5,60;
			break;
		default:
			mapannounce .@map$, "[ Odin Wisdom ] : All Floors has been cleared, congratulation. Champions Arena close in 30 seconds.",bc_map,"0x00FF99";
			sleep2 15000;
			instance_destroy $ow_instance;
			set $ow_instance, -1;
			set $instance_ow_id, -1;
			return;
	}
	
	set .@monster_size, getarraysize( .@monster );
	for( set .@i, 0; .@i < .@monster_size; set .@i,.@i+1 ){
		set .@target_amount, ( .@amount[.@i] );
		set .@clabel$, .@npcname$ + "::OnNormalDied";
		areamonster(.@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",.@monster[.@i],.@target_amount,.@clabel$);
	}
	return;
}

function	summon_special	{
	set .@map$, getarg(0);
	set .@npcname$, getarg(1);
	set .@label$, .@npcname$ + "::OnSpecialDied";
	
	setarray .@coordinate,135,133,135,133;	
	//Hugin, Munin, Freki, Greki
	setarray .@monster$,"Hugin","Munin","Greki","Freki";
	
	set .@target_amount, 1;
	set .@rand, rand(3);
	deletearray smonster[.@rand], 1;
	areamonster(.@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],.@monster$[.@rand],.smonster[.@rand],.@target_amount,.@label$);
	return;
}

function	summon_guardian	{
	set .@map$, getarg(0);
	set .@npcname$, getarg(1);
	set .@label$, .@npcname$ + "::OnGuardianDied";
	
	setarray .@coordinate,135,133,135,133;
			
	switch( $instance_ow_level ){
		case 9:
			//Odin Human Form
			setarray .@monster,2564;
			break;
		default: 
			mapannounce .@map$,"[ Odin Wisdom ] : Cleared!! Congratulation!!",bc_map,0x00FF99;
			return;
	}
	set .@monster_size, getarraysize( .@monster );
	for( set .@i, 0; .@i < .@monster_size; set .@i,.@i+1 ){
		set .@target_amount, 1;
		set $OdinId, areamonster(.@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"Odin",.@monster[.@i],.@target_amount,.@label$);
	}
	return;
}

OnNormalDied:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );
	set .@mob_dead_num, mobcount(.@map$,.@npc_name$+"::OnNormalDied" );
	
	if( .@mob_dead_num == 0 ){
		donpcevent "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc1", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc2", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc3", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc4", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc5", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc6", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc7", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc8", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc9", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc10", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc11", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc12", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc13", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc14", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc15", $ow_instance ) + "::OnResetCrystals";
		//donpcevent instance_npcname( "alaowc16", $ow_instance ) + "::OnResetCrystals";
	}
	end;
	
OnSpecialDied:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );
	set .@mob_dead_num, mobcount(.@map$,.@npc_name$+"::OnSpecialDied" );
	
	if( .@mob_dead_num == 0 ){
		set .killedSpecial, .killedSpecial + 1;
		if($instance_ow_level != .max_ow_level - 1)
		{
			goto OnChangeRune;
		}
		else
		{
			goto OnLastFloorOn;
		}
		else if($instance_ow_level == .max_ow_level)
		{
			enablenpc instance_npcname( "alaowve", $ow_instance );
			enablenpc instance_npcname( "alaowur", $ow_instance );
			enablenpc instance_npcname( "alaowsk", $ow_instance );
		}
	}
	end;
	
OnGuardianDied:
	end;
	
OnTimer10000:
	//each 10s, increase timer
	set .timerCount, .timerCount + 10;
	if(.timerCount == $ow_timer_delay)
	{
		instance_announce $ow_instance, "[ Odin Wisdom ] The Dimension collapse! You have to flee, right now!", bc_map, 0xFF0000;
		sleep2 15000;
		instance_destroy $ow_instance;
		set $ow_instance, -1;
		set $instance_ow_id, -1;
		stopnpctimer;
	}
	setnpctimer 0;
	end;
	
OnSummonAllSpecial:
	set .@map$, instance_mapname( $owMap$[0], $ow_instance );
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );	
	while(getarraysize(.smonster) > 0)
	{
		summon_special( .@map$, .@npc_name$ );
	}
	end;
	
OnSummonSpecial:
	donpcevent "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc1", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc2", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc3", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc4", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc5", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc6", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc7", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc8", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc9", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc10", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc11", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc12", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc13", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc14", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc15", $ow_instance ) + "::OnHideCrystals";
	//donpcevent instance_npcname( "alaowc16", $ow_instance ) + "::OnHideCrystals";
	
	set .@map$, instance_mapname( $owMap$[0], $ow_instance );
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );	
	summon_special( .@map$, .@npc_name$ );
	end;
	
OnFirstFloorOn:
	set .@map$, instance_mapname( $owMap$[0], $ow_instance );
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );	
	set .availableRune$, "Turisus","Isia","Pertz","Hagalaz","Asir","Urj","Raido","Nosiege","Verkana";
	goto OnChangeRune;
	end;
	
OnChangeRune:
	set .@rand, rand(getarraysize(.availableRune$) - 1;
	set $owRune$, .availableRune$[.@rand]);
	switch($owRune$)
	{
		case "Turisus":
			instance_announce $ow_instance, "[ Odin ] This is the Fire Needle.", bc_map, 0x0000FF;
			break;
		case "Isia":
			instance_announce $ow_instance, "[ Odin ] We're looking for the Unbearable, Unmovable Frost.", bc_map, 0x0000FF;
			break;
		case "Pertz":
			instance_announce $ow_instance, "[ Odin ] The meaning is based over Past Actions Memories.", bc_map, 0x0000FF;
			break;
		case "Hagalaz":
			instance_announce $ow_instance, "[ Odin ] This one is used to speak about Transformation.", bc_map, 0x0000FF;
			break;
		case "Asir":
			instance_announce $ow_instance, "[ Odin ] This one represents the Legacy, the Transmission.", bc_map, 0x0000FF;
			break;
		case "Urj":
			instance_announce $ow_instance, "[ Odin ] Vitality, Maturity.", bc_map, 0x0000FF;
			break;
		case "Raido":
			instance_announce $ow_instance, "[ Odin ] Let's considere it as Wheel, a Movement.", bc_map, 0x0000FF;
			break;
		case "Nosiege":
			instance_announce $ow_instance, "[ Odin ] This one's for Dayligth, a strong and vital Light.", bc_map, 0x0000FF;
			break;
		case "Verkana":
			instance_announce $ow_instance, "[ Odin ] This stands for the Roots, the Mother Earth.", bc_map, 0x0000FF;
			break;
	}
	deletearray .availableRune$[.@rand], 1;
	
	donpcevent "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc1", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc2", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc3", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc4", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc5", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc6", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc7", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc8", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc9", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc10", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc11", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc12", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc13", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc14", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc15", $ow_instance ) + "::OnResetCrystals";
	//donpcevent instance_npcname( "alaowc16", $ow_instance ) + "::OnResetCrystals";
	end;
	
OnCheckRune:
	set .@ok, 0;
	switch($owRune$)
	{
		case "Turisus":
			if($fhRune1On == 1 && $fhRune2On == 1)
			{
				set .@ok, 1;
			}
			else
			{
				callsub OnErrorOccured;
			}
			break;
		case "Isia":
			break;
		case "Pertz":
			break;
		case "Hagalaz":
			break;
		case "Asir":
			break;
		case "Urj":
			break;
		case "Raido":
			break;
		case "Nosiege":
			break;
		case "Verkana":
			break;
	}
	if(.@ok == 1)
	{
		callsub OnSuccessOccured;
		if(rand(0,5) <= 1)
		{	
			goto OnSummonSpecial;
		}
		else
		{
			$instance_ow_level++;
			if($instance_ow_level == .max_ow_level - 1)
			{
				instance_announce $ow_instance, "[ Odin ] Allright. Apparently, you're ready to continue my Ordeal.", bc_map, 0x0000FF;
				sleep2 500;
				if(.killedSpecial == getarraysize(.smonster))
				{
					instance_announce $ow_instance, "[ Odin ] Now, you'll have to fight against my beasts. Get prepared.", bc_map, 0x0000FF;
					sleep2 500;				
					goto OnSummonAllSpecial;
				}
				else
				{
				}
				instance_announce $ow_instance, "[ Odin ] This stands for the Roots, the Mother Earth.", bc_map, 0x0000FF;
			}
			else
			{
				goto OnChangeRune;
			}
		}
	}
	end;
	
OnSuccessOccured:
	for(set .@i,1; .@i<=16; .@i++)
	{
		if(getd("$fhRune" + .@i + "On") == 1)
		{
			donpcevent instance_npcname( "alaowc" .@i, $ow_instance ) + "::OnSuccess";
		}
	}
	return;
	
OnErrorOccured:
	for(set .@i,1; .@i<=16; .@i++)
	{
		if(getd("$fhRune" + .@i + "On") == 1)
		{
			donpcevent instance_npcname( "alaowc" .@i, $ow_instance ) + "::OnError";
		}
	}
	summon_normal( .@map$, .@npc_name$, 0 );
	return;
	
OnLastFloorOn:
	instance_announce $ow_instance, "[ Odin ] Allright. Looks like you are ready to fight against me.", bc_map, 0x0000FF;
	sleep2 500;
	instance_announce $ow_instance, "[ Odin ] But it's not so easy. I can't fight here. My power will destroy this world, it's not built to support it.", bc_map, 0x0000FF;
	sleep2 500;
	instance_announce $ow_instance, "[ Odin ] So I'll change myself. This will be a fight against a puppet, a puppet that represents me as I may have become, if my choice would have been different.", bc_map, 0x0000FF;
	sleep2 500;
	instance_announce $ow_instance, "[ Odin ] But don't think it'll be easy. Get ready now.", bc_map, 0x0000FF;
	sleep2 500;
	set .@map$, instance_mapname( $owMap$[0], $ow_instance );
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ow_instance );	
	summon_guardian( .@map$, .@npc_name$ );
	end;
}

1@tnm2,136,139,4	script	Odin::alaowod	4_F_Odin,3,3,{
	end;
	
OnTouch:	
	if(.talking == 0 && $instance_ow_level != .max_ow_level)
	{
		set $fhTalkingId, getcharid(3);
		set .talking, 1;	
		
		cutin "Odin_a", 2;
		
		npctalk "Who are you? What are you doing here?";
		instance_announce $ow_instance, "[Odin] Who are you? What are you doing here?", bc_map, 0xFF0000;
		sleep2 500
		npctalk "I don't want to see anybody. This is my retreat. I'm hiding here for a reason.";
		instance_announce $ow_instance, "[Odin] I don't want to see anybody. This is my retreat. I'm hiding here for a reason.", bc_map, 0xFF0000;
		sleep2 500
		npctalk "If this is really important, you'll have to pass the test I've prepared for you.";
		instance_announce $ow_instance, "[Odin] If this is really important, you'll have to pass the test I've prepared for you.", bc_map, 0xFF0000;
		sleep2 500
		npctalk "I'll wait here for you to prove me you're ready to encounter me.";
		instance_announce $ow_instance, "[Odin] I'll wait here for you to prove me you're ready to encounter me.", bc_map, 0xFF0000;
		sleep2 500
			
		cutin "", 255;

		donpcevent instance_npcname( "Odin_Wisdom", $ow_instance ) + "::OnFirstFloorOn";
	}
	end;
	
OnDialog1_2:
	npctalk "So it was you behind that. I understand now.";
	instance_announce $ow_instance, "[Odin] So it was you behind that. I understand now.", bc_map, 0xFF0000;
	sleep2 500;
	npctalk "You should be careful who you're working with, adventurers.";
	instance_announce $ow_instance, "[Odin] You should be careful who you're working with, adventurers.", bc_map, 0xFF0000;
	sleep2 500;

	donpcevent instance_npcname( "alaowsk", $ow_instance ) + "::OnDialog1_3";
	end;

OnInstanceInit:	
OnEnable:
	enablenpc strnpcinfo(3);
	set .talking, 0;
	end;
OnDisable:
	disablenpc strnpcinfo(3);
	end;
}

1@tnm2,136,139,4	script	Rune Crystal#1::alaowc1	4_F_Odin,3,3,{
	mes "[Rune Crystal]";
	mes "Do you want to activate the crystal?";
	if(select("Yes","No") == 1)
	{
		setnpcdisplay strnpcinfo(3), bluec;
		setd("$fhRune" + strnpcinfo(2) + "On", 1);
	}
	close;
	
OnResetCrystals:
	setd("$fhRune" + strnpcinfo(2) + "On", 0);
	setnpcdisplay strnpcinfo(3), redc;	
	end;
	
OnSuccess:
	specialeffect 512;
	end;
	
OnError:
	specialeffect 513;
	end;

OnInstanceInit:	
OnDisable:
	disablenpc strnpcinfo(3);
	end;
}

1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#2::alaowc2	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#3::alaowc3	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#4::alaowc4	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#5::alaowc5	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#6::alaowc6	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#7::alaowc7	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#8::alaowc8	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#9::alaowc9	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#10::alaowc10	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#11::alaowc11	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#12::alaowc12	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#13::alaowc13	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#14::alaowc14	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#15::alaowc15	4_F_Odin
1@tnm2,136,139,4	duplicate(alaowc)	Rune Crystal#16::alaowc16	4_F_Odin

1@tnm2,136,139,4	script	Rune Energy Provider::alaowrep	4_F_Odin,3,3,{
	mes "[Rune Energy Provider]";
	mes "To provide enough energy to the Crystals, you need a " + getitemname($owEnergyItem) + ".";
	mes "Do you want to insert it?";
	if(select("Yes","No") == 1)
	{
		if(countitem($owEnergyItem) >= 1)
		{
			delitem $owEnergyItem, 1;
			specialeffect 512;
			close2;
			instance_announce $ow_instance, "[ Odin ] Let the check begin.", bc_map, 0x0000FF;
			donpcevent instance_npcname( "odin_wisdom", $ow_instance ) + "::OnCheckRune";
		}
		else
		{
			next;
			mes "[Rune Energy Provider]";
			mes "You don't owe this item.";
		}
	}
	close;
	
OnResetCrystals:
	setd("$fhRune" + strnpcinfo(2) + "On", 0);
	setnpcdisplay strnpcinfo(3), redc;	
	end;

OnInstanceInit:	
OnDisable:
	disablenpc strnpcinfo(3);
	end;
}

1@tnm2,131,110,3	script	Verdandi::alaowve	4_F_NYDHOG,3,3,{
	//cutin "ep14_nyd01",2;
	end;
		
		
OnTouch:	
	if(.talking == 0)
	{
		set $owTalkingId, getcharid(3);
		set .talking, 1;	

		cutin "bu_maggi1",2;
		npctalk "Finally, we've reach you.";
		instance_announce $jl_instance, "[Verdandi] Finally, we've reach you.", bc_map, 0x00FF00;
		sleep2 500;
		npctalk "This was a long and hard battle...";
		instance_announce $jl_instance, "[Verdandi] This was a long and hard battle...", bc_map, 0x00FF00;
		sleep2 500;
		npctalk "But now, you'll be sealed, old man.";
		instance_announce $jl_instance, "[Verdandi] But now, you'll be sealed, old man.", bc_map, 0x00FF00;
		sleep2 500;
	
		donpcevent instance_npcname( "alaowod", $ow_instance ) + "::OnDialog1_2";
	}
	end;
	
	cutin "", 255;
	end;
	
OnInstanceInit:
	set .talking, 0;
	enablenpc strnpcinfo(3);
	end;
}

1@tnm2,128,112,5	script	Urd::alaowur	4_F_PINKWOMAN,{
	//cutin "bu_maggi1",0;
	end;
	
OnDialog1_4:			
	attachrid($fhTalkingId);
	cutin "bu_maggi1", 2;
	npctalk "It's time for you to leave your place!";
	instance_announce $ow_instance, "[Urd] It's time for you to leave your place!", bc_map, 0x00FF00;
	sleep2 500;
	
	disablenpc instance_npcname( "alaowod", $ow_instance );
		
	npctalk "Congratulations, heroes. Get ready for what's coming next!";
	instance_announce $ow_instance, "[Urd] Congratulations, heroes. Get ready for what's coming next!", bc_map, 0x00FF00;
	sleep2 500;
	
	disablenpc instance_npcname( "alaowve", $ow_instance );
	disablenpc instance_npcname( "alaowur", $ow_instance );
	disablenpc instance_npcname( "alaowsk", $ow_instance );
	
	sleep2 15000;
	instance_destroy( $ow_instance );
	set $ow_instance, -1;
	set $instance_ow_id, -1;
	end;

OnInstanceInit:
	enablenpc strnpcinfo(3);
	end;
}

1@tnm2,134,112,3	script	Skuld::alaowsk	4_F_SHALOSH,{
	//cutin "shaloshi01",2;
	end;
		
OnDialog1_3:			
	attachrid($fhTalkingId);
	cutin "shaloshi01", 2;
	npctalk "Now the Future will be preserved!";
	instance_announce $ow_instance, "[Skuld] Now the Future will be preserved!", bc_map, 0x00FF00;
	sleep2 500;
	npctalk "The Ragnarok won't happen, now!";
	instance_announce $ow_instance, "[Skuld] The Ragnarok won't happen, now!", bc_map, 0x00FF00;
	sleep2 500;
	
	donpcevent instance_npcname( "alaowur", $ow_instance ) + "::OnDialog1_4";
	end;
	
OnInstanceInit:
	enablenpc strnpcinfo(3);
	end;
}

