//===== Alayne Scripts =======================================
//= Thor Bravery Instance
//===== By: ================================================== 
//= Alayne
//===== Current Version: ===================================== 
//= 1.0
//===== Compatible With: ===================================== 
//= rAthena SVN
//= hercules SVN
//===== Description: ========================================= 
//
//= An instance based over Thor, God of Thunder
//
//===== Todo Remaining: ======================================
//
//===== Additional Comments: =================================
//
//============================================================

prontera,163,38,5	script	Thor Bravery::alatben	CLEAR_NPC,{
OnStart:
	set .@party_id, getcharid(1);
	set .@tb_leader, ( getcharid(0) == getpartyleader(.@party_id,2) );

	set $instance_tb_id, -1;
	
	//RATHENA
	//set .@has_instance, $instance_tb_id == getcharid(1);
	//HERCULES
	set .@has_instance, has_instance(.map$[0], $tb_instance);
	
	set .@instance_delay, ( instance_delay_tb - gettimetick(2) );

	set .@npcname$, "[" + .instance_name$ + "]";
	mes .@npcname$;
	mes "This is the entrance of " + .instance_name$ + ".";
	mes "The more you look at it, the more you feel disturb. Something's wrong happening in there.";
	if( .@instance_delay > 0 )
	{
		set .@hours, .@instance_delay / (60 * 60);
		set .@remaining, .@instance_delay - .@hours * (60 * 60);
		set .@minutes, .@remaining / (60);
		set .@remaining, .@remaining - .@minutes * (60);
		set .@seconds, .@remaining;
		mes "You have to wait : ^FF0000"+ .@hours +" Hours, " + .@minutes + " Minutes and " + .@seconds + " Seconds.^000000";
		//close;
	}
	if (.requiredItem != -1  && countitem(.requiredItem) < 1)
	{
		mes "You decide to step back.";
		mes "At no cost you'll enter in that place without being well prepared.";
		close;
	}
	switch( select( 
		(( .@party_id && .@tb_leader && !.@has_instance )?"Create " + .instance_name$:""),
		(( .@party_id && .@has_instance )?"Enter " + .instance_name$:""),
		(( .@party_id && .@tb_leader && .@has_instance )?"Destroy " + .instance_name$:""),
	"Nevermind."
		)){
	case 1:
		getpartymember .@party_id,2;
		if( .min_party_member >= 1 ){
			set .@origin, getcharid(3);
			set .@gettimetick, gettimetick(2);
			for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
				if( attachrid( $@partymemberaid[.@i] ) ){
					set .@member_count, .@member_count + 1;
					if( BaseLevel < .base_level[0] || BaseLevel > .base_level[1] ) set .@fail, .@fail|1;
					if( Zeny < .instance_zeny ) set .@fail, .@fail|2;
					if( instance_delay_tb > .@gettimetick ) set .@fail, .@fail|4;
					if( .@fail ){
						set .@name$, strcharinfo(0);
						break;
					}
				}
			attachrid( .@origin );
		}
		
		//check that nobody else is inside
		for(set .@i,1; .@i<=getarraysize($tbMap$); set .@i,.@i+1)
		{
			if (getmapusers(instance_mapname($tbMap$[.@i], $tb_instance)) > 0) {
				mes "Another team is already in the " + .instance_name$ + ". I can't send you there, sorry.";
				close;
			}
		}
		
		//clean any previously remaining instance
		if($tb_instance != -1)
		{
			instance_destroy $tb_instance;
			set $tb_instance, -1;
			set $instance_tb_id, -1;
		}
		
		if( .@name$ != "" && .@fail ){
			mes "^FF0000[ Failed ]^000000";
			mes "^0055FF"+.@name$+"^000000, You cannot join right now.";
			mes " ";
			mes "^FF0000[ Reason: ]^000000";
			if( .@fail & 1 ) mes "^777777You must be Level: "+.base_level[0]+" - "+.base_level[1]+"^000000";
			if( .@fail & 2 ) mes "^777777You need "+ .instance_zeny +" Zeny^000000";
			if( .@fail & 4 ) mes "^777777You still have cooldown.^000000";
			//break;
		}
		
		getpartymember getcharid(1),0;
		if (instance_check_party(.@party_id, .min_party_member, .base_level[0], .base_level[1]) == 0) {
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "Make or join a party with at least "+.min_party_member+" member and try again, with level between " +.base_level[0] + " and " + .base_level[1] + ".";
		}
		else{
			//RATHENA
			//set $tb_instance, instance_create( .instance_name$ );
			//HERCULES
			set $tb_instance, instance_create(.instance_name$, .@party_id, IOT_PARTY);
			if( $tb_instance < 0 ) {
				npctalk .instance_name$ + " reservation failed.";
				mes "^0000FF"+ .instance_name$ +" ^000000 - Reservation Failed!";
				close;
			}
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "^0000FF"+.instance_name$+" ^000000 - Reserved";
			set .@gettimetick, gettimetick(2);
			getpartymember .@party_id,2;
			for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
				if( attachrid( $@partymemberaid[.@i] ) ){
					set instance_delay_lastr, ( .@gettimetick + ( .instance_delay ));
					set Zeny, Zeny - .instance_zeny;
					dispbottom "["+.instance_name$+"] -"+ .instance_zeny +" Zeny and Instance Cooldown Applied.";
				}
			attachrid( .@origin );
			npctalk .instance_name$ + " has been generated for Party - " + getpartyname( .@party_id );
			
			set $instance_tb_id, getcharid(1);
			
			//HERCULES
			for( set .@i, 0; .@i < getarraysize($tbMap$); set .@i,.@i+1 )
			{
				if( instance_attachmap( $tbMap$[.@i],$tb_instance ) == "" ){
					setmapflag $tbMap$[.@i],mf_zone,"Memorial Dungeon";
					npctalk .instance_name$ + " reservation failed due to map attach failure.";
					mes "- ^FF0000Reservation Failed!^000000";
					instance_destroy( $tb_instance );
					set $tb_instance, -1;
					set $instance_tb_id, -1;
					close;
				}
			}
			instance_set_timeout .instance_delay,300,$tb_instance;
			instance_init($tb_instance);
			
			//disable unused npcs for now
 		}
	case 2:
		if( $instance_tb_id != getcharid(1)){
			mes .instance_name$ + " doesn't exist for Party - "+getpartyname( .@party_id );
		}
		else{
			//RATHENA
			//switch(instance_enter(.instance_name$)) {
			//	default:
			//		mes "An unknown error has occurred.";
			//		close;
			//	case 2:
			//		mes "The memorial dungeon " + .instance_name$ + " does not exist.";
			//		mes "The party leader did not generate the dungeon yet.";
			//		close;
			//	case 1:
			//		mes "You can enter the dungeon after making the party.";
			//		close;
			//	case 0:
			//		mapannounce $tbMap$[0], strcharinfo(0)+" from party, " +getpartyname( .@party_id )+", lr entering the dungeon, "+.instance_name$+".",bc_map,"0x00ff99",FW_NORMAL,12;
			//		end;
			//}
			
			//HERCULES
			if( has_instance( $tbMap$[0] ) == "" ){
				mes "Thor Bravery doesnt exist for Party - "+getpartyname( .@party_id );
			}
			else{
				warp $tbMap$[0],141,24;
				instance_announce $tb_instance, getpartyname(getcharid(1))+"  entered in the "+.instance_name$+"!",bc_map,"0x00ff99";
			}
		}
		break;
	case 3:
		mes .instance_name$ + " Destroyed.";
		instance_destroy $tb_instance;
		set $tb_instance, -1;
		set $instance_tb_id, -1;
		break;
	default: 
		break;
}
close;

OnInit:
	setarray .base_level[0],130, 175;
	setarray $tbMap$[0],"1@uns";
	set .map_size, getarraysize( $tbMap$ );
	set .min_party_member, 1;
	set .instance_zeny, 0;
	set .instance_delay, 7200;
	set $tb_timer_delay, 3600; //1 hour to clean the instance
	set .instance_name$, "Thor Bravery";
	set $tb_instance, -1;
	set $instance_tb_id, -1;
	set .requiredItem, -1; //define the required item to enter in the instance. Leave to -1 to disable
	end;
}


1@uns,101,107,4	script	thor_bravery	HIDDEN_WARP_NPC,2,2,{
function summon_normal;
function summon_guardian;
end;

OnInstanceInit:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $tb_instance );
	
	set $instance_tb_level, 0;
	set .max_tb_level, 5;
	
	set $ThorId, -1;
	
	set .timerCount, 0;
	set $tbMachine1On, 0;
	set $tbMachine2On, 0;
	set $tbMachine3On, 0;
	set $tbMachine4On, 0;
	set $tbMachine5On, 0;
	 
	initnpctimer;
	end;

function	summon_normal	{
	set .@map$, getarg(0);
	set .@npcname$, getarg(1);
	set .@increaseFloor, getarg(2);
	
	if(.@increaseFloor == 1)
	{
		$instance_tb_level++;
	}
	
	setarray .@coordinate,216,225,216,225;
	
	switch( $instance_tb_level ){
		case 1:
			//Invincible dead monsters
			setarray .@monster,3251,3252,3251,3252,3253;
			setarray .@amount,20,5,20,5,1;
			break;
		default:
			mapannounce .@map$, "[ Thor Bravery ] : All Floors has been cleared, congratulation. Champions Arena close in 30 seconds.",bc_map,"0x00FF99";
			sleep2 15000;
			instance_destroy $tb_instance;
			set $tb_instance, -1;
			set $instance_tb_id, -1;
			return;
	}
	set .@monster_size, getarraysize( .@monster );
	for( set .@i, 0; .@i < .@monster_size; set .@i,.@i+1 ){
		set .@target_amount, ( .@amount[.@i] );
		set .@clabel$, .@npcname$ + "::OnNormalDied";
		areamonster(.@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",.@monster[.@i],.@target_amount,.@clabel$);
	}
	
	return;
}

function	summon_guardian	{
	set .@map$, getarg(0);
	set .@npcname$, getarg(1);
	set .@label$, .@npcname$ + "::OnGuardianDied";
	
	setarray .@coordinate,216,225,216,225;
			
	switch( $instance_tb_level ){
		case 2:
			//Dead commanders
			setarray .@monster,3254,3254;
			break;
		default: 
			mapannounce .@map$,"[ Thor Bravery ] : Cleared!! Congratulation!!",bc_map,0x00FF99;
			return;
	}
	set .@monster_size, getarraysize( .@monster );
	for( set .@i, 0; .@i < .@monster_size; set .@i,.@i+1 ){
		set .@target_amount, 1;
		if($instance_tb_level == .max_tb_level)
		{
			set $ThorId, areamonster(.@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"Thor",.@monster[.@i],.@target_amount,.@label$);
		}
		else
		{
			areamonster(.@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"Thor",.@monster[.@i],.@target_amount,.@label$);
		}
	}
	return;
}

OnNormalDied:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $tb_instance );
	set .@mob_dead_num, mobcount(.@map$,.@npc_name$+"::OnNormalDied" );
	
	if( .@mob_dead_num == 0 ){		
		if($instance_tb_level == 1)
		{
			enablenpc instance_npcname( "hrwarp#0", $tb_instance );
			
			enablenpc instance_npcname( "alahrco", $tb_instance );		
			enablenpc instance_npcname( "alahrco2", $tb_instance );	
		}
	}
	end;
	
OnGuardianDied:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $tb_instance );
	set .@mob_dead_num, mobcount(.@map$,.@npc_name$+"::OnGuardianDied" );
	
	if( !.@mob_dead_num ){
		if($instance_tb_level == 2)
		{	
		}
	}
	end;
	
OnTimer10000:
	//each 10s, increase timer
	set .timerCount, .timerCount + 10;
	if(.timerCount == $tb_timer_delay)
	{
		instance_announce $tb_instance, "[ Thor Bravery ] The Dimension collapse! You have to flee, right now!", bc_map, 0xFF0000;
		sleep2 15000;
		instance_destroy $tb_instance;
		set $tb_instance, -1;
		set $instance_tb_id, -1;
		stopnpctimer;
	}
	setnpctimer 0;
	end;
	
OnFirstFloorOn:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $tb_instance );
	//pop monsters
	summon_normal( .@map$,.@npc_name$, 1 );
	
	enablenpc instance_npcname( "alatbma", $tb_instance );
	enablenpc instance_npcname( "alatbma1", $tb_instance );
	enablenpc instance_npcname( "alatbma2", $tb_instance );
	enablenpc instance_npcname( "alatbma3", $tb_instance );
	enablenpc instance_npcname( "alatbma4", $tb_instance );
	
	donpcevent instance_npcname( "alatbmp1", $tb_instance ) + "::OnEnableNpc";
	donpcevent instance_npcname( "alatbmp2", $tb_instance ) + "::OnEnableNpc";
	donpcevent instance_npcname( "alatbmp3", $tb_instance ) + "::OnEnableNpc";
	donpcevent instance_npcname( "alatbmp4", $tb_instance ) + "::OnEnableNpc";
	donpcevent instance_npcname( "alatbmp5", $tb_instance ) + "::OnEnableNpc";
	
	enablenpc instance_npcname( "alatbtr", $tb_instance );
	enablenpc instance_npcname( "alatbtr1", $tb_instance );
	enablenpc instance_npcname( "alatbtr2", $tb_instance );
	enablenpc instance_npcname( "alatbtr3", $tb_instance );
	enablenpc instance_npcname( "alatbtr4", $tb_instance );
	enablenpc instance_npcname( "alatbtr5", $tb_instance );
	enablenpc instance_npcname( "alatbtr6", $tb_instance );
	enablenpc instance_npcname( "alatbtr7", $tb_instance );
	enablenpc instance_npcname( "alatbtr8", $tb_instance );
	enablenpc instance_npcname( "alatbtr9", $tb_instance );
	enablenpc instance_npcname( "alatbtr10", $tb_instance );
	end;
	
OnPopMonster:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $tb_instance );
	//pop monsters
	summon_normal( .@map$,.@npc_name$, 0 );
	end;
	
OnCheckMachine:
	if($tbMachine1On == 1 && $tbMachine2On == 1 && $tbMachine3On == 1
		&& $tbMachine4On == 1 && $tbMachine5On == 1)
	{
		killmonster strnpcinfo(4), "All";
		$instance_tb_level++;
		docnpevent instance_npcname( "alatbt", $tb_instance ) + "::OnResetTalking";
	}
	end;
	
OnLastFloorOn:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $tb_instance );
	//pop monsters
	summon_guardian( .@map$,.@npc_name$ );
	end;		
}

1@uns,141,34,3	script	Thor::alatbt	4_M_RUPERT,4,4,{
	end;
	
OnTouch:	
	if(.talking == 0 && $instance_tb_level == 0)
	{
		set $tbTalkingId, getcharid(3);
		set .talking, 1;	

		cutin "",2;
		npctalk "Welcome, mortals. Welcome.";
		instance_announce $tb_instance, "[Thor] Welcome, mortals. Welcome.", bc_map, 0x00FF00;
		sleep2 500;
		npctalk "I'm Thor, god of...";
		instance_announce $tb_instance, "[Thor] I'm Thor, god of...", bc_map, 0x00FF00;
		sleep2 500;
		charcommand "#me " + strcharinfo(0) + " Yes Thor, god of Thunder we know...";
		npctalk "...Yes, Thor, god of Thunder, Tempest...And wrath.";
		instance_announce $tb_instance, "[Thor] ...Yes, Thor, god of Thunder, Tempest...And wrath.", bc_map, 0x00FF00;
		sleep2 500;
		npctalk "And you shouldn't play with mine, believe me.";
		instance_announce $tb_instance, "[Thor] And you shouldn't play with mine, believe me.", bc_map, 0x00FF00;
		sleep2 500;
		npctalk "I won't move from here. If you can cross the map, and activate all the Machines before coming back to me, I'll fight you.";
		instance_announce $tb_instance, "[Thor] I won't move from here. If you can cross the map, and activate all the Machines before coming back to me, I'll fight you.", bc_map, 0x00FF00;
		sleep2 500;		
			
		donpcevent instance_npcname( "thor_bravery", $tb_instance ) + "::OnFirstFloorOn";
	}
	else if(.talking == 0 && $instance_tb_level == 2)
	{
		set $tbTalkingId, getcharid(3);
		set .talking, 1;	

		cutin "",2;
		npctalk "Allright, you proved me you can resist some ordeals.";
		instance_announce $tb_instance, "[Thor] Allright, you proved me you can resist some ordeals.", bc_map, 0x00FF00;
		sleep2 500;		
		npctalk "Defeat my puppet, and you'll be declared as the winner.";
		instance_announce $tb_instance, "[Thor] Defeat my puppet, and you'll be declared as the winner.", bc_map, 0x00FF00;
		sleep2 500;		
		npctalk "Get ready.";
		instance_announce $tb_instance, "[Thor] Get ready.", bc_map, 0x00FF00;
		sleep2 500;		
		donpcevent instance_npcname( "thor_bravery", $tb_instance ) + "::OnLastFloorOn";
	}
	end;
	
OnResetTalking:
	set .talking, 0;
	end;
	
OnInstanceInit:	
	enablenpc strnpcinfo(3);
	set .talking, 0;
	end;
}

1@uns,141,34,3	script	Machine#1::alatbma	4_F_NYDHOG,{
	mes "[Machine]";
	mes "This machine looks pretty old. Not sure it's work like this...";
	mes "There's a lever on the side. Do you want to pull it?";
	if(select("Yes","No") == 1)
	{
		getmapxy(.@map$, .@x, .@y, UNITTYPE_NPC);
		getmapxy(.@map2$, .@x2, .@y2, UNITTYPE_NPC, instance_npcname( "alatbmp" + strnpcinfo(2), $tb_instance ));
		if(.@x2 >= .@x - 2 && .@x2 <= .@x + 2
			&& .@y2 >= .@y - 2 && .@y2 <= .@y + 2)
		{
			setd("$tbMachine" + strnpcinfo(2) + "On", 1);
			donpcevent isntance_npcname( "thor_bravery", $tb_instance ) + "::OnCheckMachine";
			disablenpc strnpcinfo(3);
			disablenpc instance_npcname( "alatbmp" + strnpcinfo(2), $tb_instance );
		}
		else
		{
			donpcevent instance_npcname( "thor_bravery", $tb_instance ) + "::OnPopMonster";
		}
	}
	close;

OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

1@uns,141,34,3	duplicate(alatbma)	Machine#2::alatbmp1	4_F_NYDHOG
1@uns,141,34,3	duplicate(alatbma)	Machine#3::alatbma2	4_F_NYDHOG
1@uns,141,34,3	duplicate(alatbma)	Machine#4::alatbma3	4_F_NYDHOG
1@uns,141,34,3	duplicate(alatbma)	Machine#5::alatbma4	4_F_NYDHOG

1@uns,141,34,3	script	Energy Provider::alatbmp1	4_F_NYDHOG,{
	mes "[Energy Provider]";
	mes "It's strange, you feel attracted to this strange piece.";
	if(Sp >= MaxSp / 10)
	{
		percentheal 0, -10;
		getmapxy(.@map2$, .@x2, .@y2, UNITTYPE_PC);
		npcwalkto .@x2, .@y2;
	}
	else
	{
		mes "But nothing happens.";
	}	
	close;
	
OnTimer10000:
	specialeffect 512;
	setnpctimer 0;
	end;
	
OnEnableNpc:
	enablenpc strnpcinfo(3);
	initnpctimer;
	end;

OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

1@uns,141,34,3	duplicate(alatbmp1)	Energy Provider::alatbmp2	4_F_NYDHOG
1@uns,141,34,3	duplicate(alatbmp1)	Energy Provider::alatbmp3	4_F_NYDHOG
1@uns,141,34,3	duplicate(alatbmp1)	Energy Provider::alatbmp4	4_F_NYDHOG
1@uns,141,34,3	duplicate(alatbmp1)	Energy Provider::alatbmp5	4_F_NYDHOG

1@uns,141,34,3	script	Trap Cell::alatbtr	CLEAR_NPC,2,2,{
	end;

OnTouch:
	switch(rand(0,10))
	{
		case 0:
			specialeffect 512;
			percentheal -10, -10;
			break;
		case 1:
			specialeffect 512;
			percentheal -30, -30;
			break;
		case 2:
			specialeffect 512;
			percentheal -50, -50;
			break;
		case 3:
			specialeffect 512;
			percentheal -75, -75;
			break;
		case 4:
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			break;
		case 5:
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			break;
		case 6:
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			areamobuseskill strnpcinfo(4), 150, 150, 150, SHINING_PLANT, MG_LIGHTNINGBOLT, 10, 3000, 1, e_sigh, 3;
			break;
		default:	
			donpcevent instance_npcname( "thor_bravery", $tb_instance ) + "::OnPopMonster";
	}
	end;
	
OnEnableNpc:
	enablenpc strnpcinfo(3);
OnMoveNPC:	
	set .hidden, 1;
	do
	{		
			set .@movex,rand(0,150);
			set .@movey,rand(0,150);
			set .@map$,strnpcinfo(4);
	}
	while(!checkcell(.@map$,.@movex,.@movey,cell_chkpass));
	movenpc strnpcinfo(4),.@movex,.@movey;
	
	initnpctimer;
	end;
	
OnTimer1000:
	stopnpctimer;
	set .hidden, 0;
	end;
	
OnInstanceInit:
	set .hidden, 0;
	disablenpc strnpcinfo(3);
	end;
}

1@uns,141,34,3	script	Verdandi::alatbve	4_F_NYDHOG,2,2,{
	//cutin "ep14_nyd01",2;
	end;
		
OnTouch:	
	if(.talking == 0)
	{
		set $hrTalkingId, getcharid(3);
		set .talking, 1;	

		cutin "ep14_nyd01",2;
		npctalk "Congratulations! You defeated Thor!";
		instance_announce $jl_instance, "[Verdandi] Congratulations! You defeated Thor!", bc_map, 0x00FF00;
		sleep2 500;
	
		donpcevent instance_npcname( "alatbsk", $tb_instance ) + "::OnDialog1_2";
	}
	end;

OnInstanceInit:
	set .talking, 0;
	disablenpc strnpcinfo(3);
	end;
}

1@uns,139,32,5	script	Urd::alatbur	4_F_PINKWOMAN,{
	//cutin "bu_maggi1",0;
	end;
		
OnDialog1_3:			
	attachrid($hrTalkingId);
	cutin "bu_maggi1", 2;
	npctalk "At least, it's not the same sort of strength.";
	instance_announce $tb_instance, "[Urd] At least, it's not the same sort of strength.", bc_map, 0x00FF00;
	sleep2 500;
	npctalk "But you'll discover that soon enough, I think.";
	instance_announce $tb_instance, "[Urd] But you'll discover that soon enough, I think.", bc_map, 0x00FF00;
	sleep2 500;
	
	cutin "", 255;

	instance_destroy $tb_instance;
	set $tb_instance, -1;
	set $instance_tb_id, -1;
	end;	
	
OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

1@uns,139,32,5	script	Skuld::alatbsk	4_F_SHALOSH,{
	//cutin "shaloshi01",2;
	end;
		
OnDialog1_2:			
	attachrid($hrTalkingId);
	cutin "shaloshi01", 2;
	npctalk "It was probably one of the toughest fight you may encounter. Maybe Thor is stronger than Odin himself.";
	instance_announce $tb_instance, "[Skuld] It was probably one of the toughest fight you may encounter. Maybe Thor is stronger than Odin himself.", bc_map, 0x00FF00;
	sleep2 500;
	
	donpcevent instance_npcname( "alahrur", $tb_instance ) + "::OnDialog1_3";
	end;
	
OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

