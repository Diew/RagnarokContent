//===== eAthena Script =======================================
//= Wizarding School Main script
//===== Par: =================================================
//= Alayne
//===== Version du Script: ===================================
//= 1.0 
//===== Compatible Avec: =====================================
//= eAthena TxT & SQL
//===== Commentaires =========================================
//
//= base skeleton manager
//
//============================================================

prt_q,248,79,3	script	Strange Wizard::alawssw	4_M_MAGE,{
OnStart:
	set .@guild_id, getcharid(2);
	set .@ws_leader, ( getcharid(0) == getpartyleader(.@guild_id,2) );

	//RATHENA
	set .@has_instance, $instance_ws_id == getcharid(1);
	//HERCULES
	//set .@has_instance, has_instance(.map$[0], $instance_ws_id);
	
	set .@instance_delay, ( instance_delay_ws - gettimetick(2) );

	set .@npcname$, "[Strange Wizard]";
	mes .@npcname$;
	mes "Did you ever heard about the Wizarding School?";
	mes "It's an hidden place where people believing in magic can go to...lear some.";
	mes "Amazing isn't it?";
	mes "I've been looking for it for years, and now, I've finally found the entrance!";
	next;
	switch( select( 
		(( .@guild_id && .@ai_leader && !.@has_instance )?"Create " + .instance_name$:""),
		(( .@guild_id && .@ai_leader && .@has_instance )?"Destroy " + .instance_name$:""),
	"Nevermind."
		)){
	case 1:
		if( .@instance_delay > 0 )
		{
			mes "You have to wait : ^FF0000"+.@instance_delay+" Seconds.^000000";
			close;
		}
		getpartymember .@guild_id,2;
		if( .min_party_member >= 1 ){
			set .@origin, getcharid(3);
			set .@gettimetick, gettimetick(2);
			for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
				if( attachrid( $@partymemberaid[.@i] ) ){
					set .@member_count, .@member_count + 1;
					if( BaseLevel < .base_level[0] || BaseLevel > .base_level[1] ) set .@fail, .@fail|1;
					if( Zeny < .instance_zeny ) set .@fail, .@fail|2;
					if( instance_delay_ws > .@gettimetick ) set .@fail, .@fail|4;
					if( .@fail ){
						set .@name$, strcharinfo(0);
						break;
					}
				}
			attachrid( .@origin );
		}
		
		freeloop(1);
		
		//check that nobody else is inside
		for(set .@i,0; .@i<getarraysize(.map$); set .@i,.@i+1)
		{
			if (.map$[.@i] != "" && getmapusers(instance_mapname(.map$[.@i], instance_id())) > 0) {
				mes "Another guild is already in the " + .instance_name$ + ". I can't send you there, sorry.";
				close;
			}
		}
		
		//clean any previously remaining instance
		if($ws_instance != -1)
		{
			instance_destroy $ws_instance;
			set $ws_instance, -1;
			set $instance_ws_id, -1;
		}
		
		if( .@name$ != "" && .@fail ){
			mes "^FF0000[ Failed ]^000000";
			mes "^0055FF"+.@name$+"^000000, You cannot join right now.";
			mes " ";
			mes "^FF0000[ Reason: ]^000000";
			if( .@fail & 1 ) mes "^777777You must be Level: "+.base_level[0]+" - "+.base_level[1]+"^000000";
			if( .@fail & 2 ) mes "^777777You need "+ .instance_zeny +" Zeny^000000";
			if( .@fail & 4 ) mes "^777777You still have cooldown.^000000";
			break;
		}
		
		getpartymember getcharid(1),0;
		if (instance_check_guild(.@guild_id, .min_party_member, .base_level[0], .base_level[1]) == 0) {
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "Make or join a guild with at least "+.min_party_member+" member and try again, with level between " +.base_level[0] + " and " + .base_level[1] + ".";
		}
		else{	
			//RATHENA
			set $ws_instance, instance_create( .instance_name$, IM_GUILD, .@guild_id );
			//HERCULES
			//set $ws_instance, instance_create( .instance_name$, .@guild_id, IOT_GUILD );
			if( $ws_instance < 0 ) {
				npctalk .instance_name$ + " reservation failed.";
				mes "^0000FF"+ .instance_name$ +" ^000000 - Reservation Failed!";
				close;
			}
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "^0000FF"+.instance_name$+" ^000000 - Reserved";
				
			attachrid( .@origin );
			npctalk .instance_name$ + " has been generated for Party - " + getpartyname( .@guild_id );
			
			set $instance_ws_id, getcharid(2);
			
			//HERCULES
			//for( set .@i, 0; .@i < getarraysize(.map$); set .@i,.@i+1 )
			//{
			//	if( instance_attachmap( .map$[.@i],$ws_instance ) == "" ){
			//		setmapflag .map$[.@i],mf_zone,"Memorial Dungeon";
			//		npctalk .instance_name$ + " reservation failed due to map attach failure.";
			//		mes "- ^FF0000Reservation Failed!^000000";
			//		instance_destroy( $ws_instance );
			//		set $ws_instance, -1;
			//		set $instance_ws_id, -1;
			//		close;
			//	}
			//}
			//instance_set_timeout $time_ws_limit[1],$time_ws_limit[2],$ws_instance;
			//instance_init($ws_instance);
			
			//disable unused npcs for now
			
			next;
			mes "^0055FF[ Strange Wizard ]^000000";
			mes "Get ready, I'll send you there in a bit!";
			
			set .@gettimetick, gettimetick(2);
			getguildmember .@guild_id,2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == strnpcinfo(4) ){
					set instance_delay_ws, ( .@gettimetick + ( $time_ws_limit[3] ));
					set Zeny, Zeny - .instance_zeny;
					dispbottom "["+.instance_name$+"] -"+ .instance_zeny +" Zeny and Instance Cooldown Applied.";
					getmapxy(.@map$, .@x, .@y, UNITTYPE_PC);
					save .@map$, .@x, .@y;
		
					//HERCULES
					//if( has_instance( .map$[0] ) == "" ){
					//	mes .instance_name$ + " doesnt exist for Party - "+getpartyname( .@party_id );
					//}
					//else{
					//	warp .map$[0],56,68;
					//	instance_announce $ws_instance, getpartyname(getcharid(1))+"  entered in the "+.instance_name$+"!",bc_map,"0x00ff99";
					//}
					
					//RATHENA
					switch(instance_enter(.instance_name$)) {
						default:
							mes "An unknown error has occurred.";
							close;
						case 2:
							mes "The memorial dungeon " + .instance_name$ + " does not exist.";
							mes "The party leader did not generate the dungeon yet.";
							close;
						case 1:
							mes "You can enter the dungeon after making the party.";
							close;
						case 0:
							instance_announce $ws_instance, strcharinfo(0)+" from party, " +getpartyname( .@party_id )+", is entering the dungeon, "+.instance_name$+".",bc_map,"0x00ff99",FW_NORMAL,12;
							end;
					}
				}
 		}
		
		freeloop(0);
		break;
	case 2:
		next;
		mes .instance_name$ + " Destroyed.";
		instance_destroy $ws_instance;
		set $instance_ws_id, -1;
		set $ws_instance, -1;
		break;
	default: 
		break;
}
close;

OnInit:
	setarray .base_level[0],145,175;
	setarray $time_ws_limit[0], 7200, 3600, 84500; //complete, out, retry
	setarray .map$[0],"1@ws", "2@ws", "3@ws", "4@ws", "5@ws", "6@ws", "7@ws";
	set .map_size, getarraysize( .map$ );
	set .min_party_member, 1;
	set .instance_zeny, 0;
	set .instance_name$, "Wizarding School";
	set $ws_instance, -1;
	set $instance_ws_id, -1;
	
	set $owlLetterId, 512;
	set $snakeFangId, 512;
	set $sandId, 512;
	set $waterId, 512;
	set $memoryId, 512;
	
	set $course1StoneId, 512;
	set $course2DiaryId, 512;
	set $course3HourglassId, 512;
	set $course4CupId, 512;
	set $course5DiademId, 512;
	set $course6NoteId, 512;
	set $course7ScaleId, 512;
	end;
}

0@ain,101,107,4	script	wizarding_school	HIDDEN_WARP_NPC,2,2,{
function summon_normal;
function summon_guardian;
end;

OnInstanceInit:
	set .@map$, strnpcinfo(4);
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ws_instance );
		
	set .timerCount, 0;
	initnpctimer;
	
	set $wsCourse1Complete, 0;
	set $wsCourse2Complete, 0;
	set $wsCourse3Complete, 0;
	set $wsCourse4Complete, 0;
	set $wsCourse5Complete, 0;
	set $wsCourse6Complete, 0;
	set $wsCourse7Complete, 0;
	
	set $course3ChanceUp, 0;
	
	goto OnFirstFloorOn;
	end;

OnTimer10000:
	stopnpctimer;
	//each 10s, increase timer
	set .timerCount, .timerCount + 10;
	if(.timerCount == $time_ws_limit[1])
	{
		instance_announce $ws_instance, "[ Wizarding School ] The Dimension collapse! I have to get you out of there!", bc_map, 0xFF0000;
		sleep 5000;
		instance_destroy $ws_instance;
		set $instance_ws_id, -1;
		set $ws_instance, -1;
		stopnpctimer;
	}
	initnpctimer;
	end;	
	
function	summon_normal	{
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@consideredLevel, getarg(0);
	set .@popNeeded, 1;
	switch(.@consideredLevel)
	{
		case 0:
			set .@map$, instance_mapname( "1@ws", instance_id() );
			setarray .@monster,1071,1071;
			setarray .@amount,100,1;
			setarray .@coordinate,45,77,67,58;
			setarray .@event$, "OnOwlDeath", "OnGoodOwlDeath";
			
			setmapflag .@map$, 12;
			setmapflag .@map$, 0;
			setmapflag .@map$, 3;
			setmapflag .@map$, 4;
			setmapflag .@map$, 15;
			setmapflag .@map$, 1;
			setmapflag .@map$, 13;
			setmapflag .@map$, 31;
			break;
			
		case 1:
			set .@map$, instance_mapname( "3@ws", instance_id() );
			switch($wsCourse1Level)
			{
				case 0:
					//Cerbere
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse1Death";
					mapannounce .@map$, "[ Wizarding School ] You're now about to encounter the Cerbere. Get ready.", bc_map, 0xFF0000;
					break;
				case 1:
					//Hell Fillet
					setarray .@monster,1071;
					setarray .@amount,100;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse1Death";
					mapannounce .@map$, "[ Wizarding School ] You'll be soon trapped in the Hell Fillets. Cut your way through it.", bc_map, 0xFF0000;
					break;
				case 2:
					//Troll
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse1Death";
					mapannounce .@map$, "[ Wizarding School ] Be careful, a dangerous Troll escaped from the Mountain.", bc_map, 0xFF0000;
					break;
				case 3:
					//Key
					setarray .@monster,1071,1071;
					setarray .@amount,99,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnKeyDeath","OnGoodKeyDeath";
					mapannounce .@map$, "[ Wizarding School ] You'll have to find the right Key to go further inside.", bc_map, 0xFF0000;
					break;
				case 4:
					//Mirror
					setarray .@monster,1071,1071;
					setarray .@amount,99,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnMirrorDeath","OnGoodMirrorDeath";
					mapannounce .@map$, "[ Wizarding School ] Find the right Mirror, or you wont find the truth.", bc_map, 0xFF0000;
					break;
				case 5:
					//Professor
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGuardianDeath";
					mapannounce .@map$, "[ Wizarding School ] The Wicked Professor took the Stone. Get it back from him.", bc_map, 0xFF0000;
					break;
			}
			break;
			
		case 2:
			set .@map$, instance_mapname( "4@ws", instance_id() );
			switch($wsCourse2Level)
			{
				case 0:
					//Stomping Tree
					setarray .@monster,1071;
					setarray .@amount,20;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnStompingTreeDeath";
					mapannounce .@map$, "[ Wizarding School ] Be careful! You've entered in the area of the Stomping Trees", bc_map, 0xFF0000;
					sleep2 1500;
					mapannounce .@map$, "[ Wizarding School ] Avoid them to reach the Root to stop them. But don't hurt them!", bc_map, 0xFF0000;
					enablenpc instance_npcname( "alawsro", instance_id() );
					break;
				case 1:
					//Shadow Ghost
					setarray .@coordinate,45,77,67,58;
					getguildmember $instance_ws_id;
					copyarray .@guildmemberaid, $@guildmemberaid, $@guildmembercount;
					for(set .@i, 0; .@i<getarraysize(.@guildmemberaid); set .@i,.@i+1)
					{
						if(attachrid(.@guildmemberaid) && strcharinfo(3) == .@map$)
						{
							getmapxy(.@mappop$, .@mapx, .@mapy, UNITTYPE_PC);
							clone .@mappop$, .@mapx, .@mapy, .@npc_name$+"::OnCourse2Death", getcharid(0);
						}
					}
					set .@popNeeded, 0;
					mapannounce .@map$, "[ Wizarding School ] Allright it's now time to fight you're fears! Raise, and fight against your shadows!", bc_map, 0xFF0000;
					break;
				case 2:
					//Hint and Hiss
					setarray .@monster,1071,1072;
					setarray .@amount,50,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse2Death";
					mapannounce .@map$, "[ Wizarding School ] The next steps is hidden for anyone who doesn't know how to ear.", bc_map, 0xFF0000;
					break;
				case 3:
					//Giant Snake
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGiantSnakeDeath";
					mapannounce .@map$, "[ Wizarding School ] You'll have to kill this big snake to encounter your true ennemy.", bc_map, 0xFF0000;
					break;
				case 4:
					//Young Dark Sorcerer
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGuardianDeath";
					mapannounce .@map$, "[ Wizarding School ] This isn't a real corpse...Not yet...", bc_map, 0xFF0000;
					
					//HERCULES
					//set $course2Id, areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",.@monster[0],1,.@npcname$ + "::" + .@event$[0];
					//RATHENA
					areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",.@monster[0],1,.@npcname$ + "::" + .@event$[0];
					set $course2Id, $@mobId[0];
					unitskilluseid $course2Id,"NPC_INVINCIBLE",1;
					enablenpc instance_npcname( "alawsno", instance_id() );
					set .@popNeeded, 0;
					break;
			}
			break;
			
		case 3:
			set .@map$, instance_mapname( "5@ws", instance_id() );
			switch($wsCourse3Level)
			{
				case 0:
					//Sucking Ghosts
					setarray .@monster,1071;
					setarray .@amount,10;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse3Death";
					mapannounce .@map$, "[ Wizarding School ] Those ghosts have nothing to do here!", bc_map, 0xFF0000;
					break;
				case 1:
					//Find the Time Backer
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse3Death";
					mapannounce .@map$, "[ Wizarding School ] The Time Backer doesn't work anymore...We need some sand to make it working again!", bc_map, 0xFF0000;
					enablenpc instance_npcname( "alawstb", instance_id() );
					break;
				case 2:
					disablenpc instance_npcname( "alawstb", instance_id() );
					//Catch the Rat
					setarray .@monster,1071,1071;
					setarray .@amount,50,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse3Death", "OnRatDeath";
					mapannounce .@map$, "[ Wizarding School ] Catch this Rat! It's a transformed man!", bc_map, 0xFF0000;
					break;
				case 3:
					//Fight the Werewolf
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse3Death";
					mapannounce .@map$, "[ Wizarding School ] Be careful! He doesn't recognize anybody anymore.", bc_map, 0xFF0000;
					break;
				case 4:
					//Fight the Sucking Ghosts
					setarray .@monster,1071;
					setarray .@amount,100;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse3Death";
					mapannounce .@map$, "[ Wizarding School ] Once more? But...But they're so much of it...", bc_map, 0xFF0000;
					break;
				case 5:
					//Fight the Gryphon Killer
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGuardianDeath";
					mapannounce .@map$, "[ Wizarding School ] Kill him before he kills all the Gryphons!", bc_map, 0xFF0000;
					
					getguildmember $instance_ws_id;
					copyarray .@guildmemberaid, $@guildmemberaid, $@guildmembercount;
					for(set .@i, 0; .@i<getarraysize(.@guildmemberaid); set .@i,.@i+1)
					{
						if(attachrid(.@guildmemberaid) && strcharinfo(3) == .@map$)
						{
							getmapxy(.@mappop$, .@mapx, .@mapy, UNITTYPE_PC);
							summon "Gryphon", 1002, 600000, .@npc_name$+"::OnGryphonDeath";
						}
					}
					break;
			}
			break;
			
		case 4:
			set .@map$, instance_mapname( "6@ws", instance_id() );
			switch($wsCourse4Level)
			{
				case 0:
					//Fight the Dragons to get the Golden Egg
					setarray .@monster,1071;
					setarray .@amount,4;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse4Death";
					mapannounce .@map$, "[ Wizarding School ] You're first task is to defeat those dragons!", bc_map, 0xFF0000;
					break;
				case 1:
					set $course4EggLife, rand(50);
					//Fight the Siren while the Egg is stripping you (one next to the eggs npc will prevent the strip)
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse4Death";
					mapannounce .@map$, "[ Wizarding School ] Now, you'll have to fight against those Sirens!", bc_map, 0xFF0000;
					enablenpc instance_npcname( "alawsge", instance_id() );
					break;
				case 2:
					disablenpc instance_npcname( "alawsge", instance_id() );
					//Find your way in the maze to get the cup
					setarray .@monster,1071,1071;
					setarray .@amount,50,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse4Death","OnCourse4Death";
					mapannounce .@map$, "[ Wizarding School ] Third Task will be to defeat all the monsters to get the Cup!", bc_map, 0xFF0000;
					break;
				case 3:
					//Fight Dark Sorcerer in the Cimetery, while Ghouls raise and his followers attacks you
					setarray .@monster,1071,1071,1071;
					setarray .@amount,1,50,20;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGuardianDeath", "OnCourse4FillDeath", "OnCourse4FillDeath";
					mapannounce .@map$, "[ Wizarding School ] No! No that's possible! It can't be back!", bc_map, 0xFF0000;
					break;
			}
			break;
			
		case 5:
			set .@map$, instance_mapname( "7@ws", instance_id() );
			switch($wsCourse5Level)
			{
				case 0:
					//Fight the Army of Dolor
					setarray .@monster,1071;
					setarray .@amount,4;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse5Death";
					mapannounce .@map$, "[ Wizarding School ] You have to defeat those ennemies to continue your life here!", bc_map, 0xFF0000;
					break;
				case 1:
					//Fight against the Death Eaters
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse5Death";
					mapannounce .@map$, "[ Wizarding School ] Those aren't normal ennemies...", bc_map, 0xFF0000;
					break;
				case 2:
					//Fight against the School Traitors
					setarray .@monster,1071,1071;
					setarray .@amount,50,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse5Death","OnGuardianDeath";
					mapannounce .@map$, "[ Wizarding School ] They're your old fellows...Now they're ennemies belonging to the new Headmaster!", bc_map, 0xFF0000;
					break;
			}
			break;
			
		case 6:
			set .@map$, instance_mapname( "8@ws", instance_id() );
			switch($wsCourse6Level)
			{
				case 0:
					//Find the Memory Stream
					setarray .@monster,1071;
					setarray .@amount,100;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse6Death";
					mapannounce .@map$, "[ Wizarding School ] First, you'll need to find a place to read memories!", bc_map, 0xFF0000;
					break;
				case 1:
					//Steal Memory from Potion Professor
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnProfessorDeath";
					mapannounce .@map$, "[ Wizarding School ] Now, steal this one's memory...", bc_map, 0xFF0000;
					break;
				case 2:
					//Find the Gaunt Ring and fight against the Inferi army
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse6Death";
					mapannounce .@map$, "[ Wizarding School ] Those aren't normal ennemies...", bc_map, 0xFF0000;
					break;
				case 3:
					//Get back to the School and fight against the Death Eaters with the Director.
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse6Death";
					mapannounce .@map$, "[ Wizarding School ] Defeat those with the Director's help!", bc_map, 0xFF0000;
					
					set .@directorPop, 0;
					getguildmember $instance_ws_id;
					copyarray .@guildmemberaid, $@guildmemberaid, $@guildmembercount;
					for(set .@i, 0; .@i<getarraysize(.@guildmemberaid) && .@directorPop == 0; set .@i,.@i+1)
					{
						if(attachrid(.@guildmemberaid) && strcharinfo(3) == .@map$)
						{
							getmapxy(.@mappop$, .@mapx, .@mapy, UNITTYPE_PC);
							summon "Head Master", 1002, 600000, .@npc_name$+"::OnGuardianDeath";
							set .@directorPop, 1;
						}
					}
					break;
				case 4:
					//if needed, kill the Director.
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGuardianDeath";
					mapannounce .@map$, "[ Head Master ] I'm too weak to continue...Please...Kill me yourself!", bc_map, 0xFF0000;
					break;
			}
			break;
			
		case 7:
			set .@map$, instance_mapname( "9@ws", instance_id() );
			switch($wsCourse7Level)
			{
				case 0:
					//Find the Serpent Medallion and fight against the Human Wanderer Ghosts
					setarray .@monster,1071;
					setarray .@amount,100;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse7Death";
					mapannounce .@map$, "[ Wizarding School ] The first Jewel, the Medallion, is kept by those Ghosts!", bc_map, 0xFF0000;
					break;
				case 1:
					//Find the Hupplepuff Cup and fight against multiplying cup
					set $course7Duplication, rand(50);
					set $course7DuplicationCnt, 1;
					setarray .@monster,1071;
					setarray .@amount,$course7DuplicationCnt;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCupProtectorDeath";
					mapannounce .@map$, "[ Wizarding School ] The second one, the Cup, is protected by monsters and duplication spell...", bc_map, 0xFF0000;
					sleep2 1500;
					mapannounce .@map$, "[ Wizarding School ] Find the good one to continue.", bc_map, 0xFF0000;
					break;
				case 2:
					//Find the RavenClaw Diadem and fight against the Running Fire
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse7Death";
					mapannounce .@map$, "[ Wizarding School ] The third one, the Diadem, is protected by Fire...", bc_map, 0xFF0000;
					break;
				case 3:
					//Find the Giant Snake. Fight against the Potion Professor to attack the Snake and kill it
					setarray .@monster,1071,1071;
					setarray .@amount,1,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse7Death", "OnCourse7Death";
					mapannounce .@map$, "[ Wizarding School ] The Snake is the Forth...And protected by a traitor...", bc_map, 0xFF0000;
					break;
				case 4:
					//Find the Survivor Boy and kill him after defeating the Director Ghost who protect him
					setarray .@monster,1071,1071,1071,1071,1071;
					setarray .@amount,1,1,1,1,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse7Death";
					mapannounce .@map$, "[ Wizarding School ] Kill him...Kill the boy who Survived and his friends...", bc_map, 0xFF0000;
					break;
				case 5:
					//Fight against Dark Sorcerer army
					setarray .@monster,1071;
					setarray .@amount,50;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnCourse7Death";
					mapannounce .@map$, "[ Wizarding School ] Those are the last steps before the Dark Sorcerer...", bc_map, 0xFF0000;
					break;
				case 6:
					//Fight against Dark Sorcerer himself and kill him
					setarray .@monster,1071;
					setarray .@amount,1;
					setarray .@coordinate,45,77,67,58;
					setarray .@event$, "OnGuardianDeath";
					mapannounce .@map$, "[ Wizarding School ] It's him...The real one! Kill him!", bc_map, 0xFF0000;
					break;
			}
			break;
			
		case 8:
		
			set .@map$, instance_mapname( "3@ws", instance_id() );
			//dark lord army
			setarray .@monster,1071;
			setarray .@amount,100;
			setarray .@coordinate,45,77,67,58;
			setarray .@event$, "OnNormalDied";
			
			set $bossPopRand, rand(100);
			break;
	}
	
	if(.@popNeeded == 1)
	{
		set .@npc_name$, instance_npcname( strnpcinfo(0), $ws_instance );		
		set .@monster_size, getarraysize( .@monster );
		for( set .@i, 0; .@i < .@monster_size; set .@i,.@i+1 ){
			set .@label$, .@npcname$ + "::OnNormalDied";
			if(getarraysize(.@event$) > 0)
			{
				set .@label$, .@npcname$ + "::" + .@event$[.@i];			
			}
			areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",.@monster[.@i],.@amount[.@i],.@label$;
		}
	}
}

function	summon_guardian	{
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	
	set .@map$, instance_mapname( "3@ws", instance_id() );
	setarray .@monster,1071,1071;
	setarray .@amount,100,1;
	setarray .@coordinate,45,77,67,58;
	setarray .@event$, "OnNormalDied", "OnBossDied";
	
	set $horcruxesBroken, 0;
	
	set $bossPopRand, rand(100);
	
	set .@npc_name$, instance_npcname( strnpcinfo(0), $ws_instance );		
	set .@monster_size, getarraysize( .@monster );
	for( set .@i, 0; .@i < .@monster_size; set .@i,.@i+1 ){
		set .@label$, .@npcname$ + "::OnBossDied";
		if(getarraysize(.@event$) > 0)
		{
			set .@label$, .@npcname$ + "::" + .@event$[.@i];			
		}
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",.@monster[.@i],.@amount[.@i],.@label$;
	}
}

OnBossDied:
	set .@map$, instance_mapname( "3@ws", instance_id() );
	killmonsterall .@map$;
	mapannounce .@map$, "[ Dark Lord ] No...No this can't be...I'm not done!", bc_map, 0xFF0000;
	
	set .@summonPop, 0;	
	freeloop 1;
	
	getguildmember $instance_ws_id;
	copyarray .@guildmemberaid, $@guildmemberaid, $@guildmembercount;
	for(set .@i, 0; .@i<getarraysize(.@guildmemberaid) && .@summonPop == 0; set .@i,.@i+1)
	{
		if(attachrid(.@guildmemberaid) && strcharinfo(3) == .@map$)
		{
			getmapxy(.@mappop$, .@mapx, .@mapy, UNITTYPE_PC);
			if(countitem($course1StoneId) > 0)
			{
				delitem $course1StoneId, 1;
				set .@summonPop, 1;
				//Devoted Professor
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
			else if(countitem($course2DiaryId) > 0)
			{
				delitem $course2DiaryId, 1;
				set .@summonPop, 1;
				//Dark Lord Ghost
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
			else if(countitem($course3HourglassId) > 0)
			{
				delitem $course3HourglassId, 1;
				set .@summonPop, 1;
				//Axe Bourreau
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
			else if(countitem($course4CupId) > 0)
			{
				delitem $course4CupId, 1;
				set .@summonPop, 1;
				//Dark Lord Cimetery
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
			else if(countitem($course5DiademId) > 0)
			{
				delitem $course5DiademId, 1;
				set .@summonPop, 1;
				//School Chief
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
			else if(countitem($course6NoteId) > 0)
			{
				delitem $course6NoteId, 1;
				set .@summonPop, 1;
				//Head Master
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
			else if(countitem($course7ScaleId) > 0)
			{
				delitem $course7ScaleId, 1;
				set .@summonPop, 1;
				//Dark Lord 2
				monster .@mappop$, .@mapx, .@mapy, "Horcruxe", 1002, 1, .@npc_name$+"::OnHorcruxeDeath";
			}
		}
	}
	
	freeloop 0;	
	
	if(.@summonPop == 0 && $horcruxesBroken < 7)
	{
		sleep2 1500;
		mapannounce .@map$, "[ Dark Lord ] Not as long as I'll have some horcruxes!!", bc_map, 0xFF0000;
		summon_guardian( );
	}
	else
	{
		mapannounce .@map$, "[ Dark Lord ] The...There's no more of it...You can't! You can't win!", bc_map, 0xFF0000;
		sleep2 1500;
		mapannounce .@map$, "[ Dark Lord ] Noooooooooooooooooooooooooooo!", bc_map, 0xFF0000;
		sleep2 1500;
		mapannounce .@map$, "[ Wizarding School ] The School will be closed for the next few months...Get ready to leave!", bc_map, 0xFF0000;
		sleep2 150000;
		instance_destroy instance_id();
	}
	end;
	
OnHorcruxeDeath:
	set $horcruxesBroken, $horcruxesBroken + 1;
	end;

OnNormalDied:
	set .@map$, instance_mapname( "3@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnNormalDied";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount <= $bossPopRand)
	{
		mapannounce .@map$, "[ Dark Lord ] You can't defeat my armies!", bc_map, 0xFF0000;
		summon_normal( 8 );		
	}
	end;

OnCupProtectorDeath:
	set .@map$, instance_mapname( "9@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCupProtectorDeath";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0 && $course7DuplicationCnt >= $course7Duplication)
	{
		$wsCourse7Level++;
		summon_normal( 7 );		
	}
	else
	{
		set $course7DuplicationCnt, $course7DuplicationCnt + 1;
		summon_normal( 7 );		
	}
	end;

OnCourse7Death:	
	set .@map$, instance_mapname( "9@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse7Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse7Level++;
		summon_normal( 7 );
	}
	end;

OnProfessorDeath:
	getitem $memoryId, 1;
	$wsCourse6Level++;
	summon_normal( 6 );
	end;

OnCourse6Death:	
	set .@map$, instance_mapname( "8@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse6Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse6Level++;
		summon_normal( 6 );
	}
	end;

OnCourse5Death:	
	set .@map$, instance_mapname( "7@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse5Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse5Level++;
		summon_normal( 5 );
	}
	end;

OnCourse4EggFilled:	
	$wsCourse4Level++;
	summon_normal( 4 );
	end;
	
OnCourse4FillDeath:	
	//nothing, used to clean
	end;
	
OnCourse4Death:	
	set .@map$, instance_mapname( "6@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse4Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		if($wsCourse4Level != 1)
		{
			$wsCourse4Level++;
		}
		else
		{
			mapannounce .@map$, "[ Wizard ] That's not the way you'll get over this...", bc_map, 0xFF0000;
		}
		summon_normal( 4 );
	}
	end;

OnGryphonDeath:
	set .@map$, instance_mapname( "5@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnGryphonDeath";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		//lost, try again
		killmonsterall .@map$;
		if($course3ChanceUp > 0)
		{
			set $course3ChanceUp, $course3ChanceUp - 1;
			mapannounce instance_mapname( "5@ws", instance_id() ), "[ Wizarding School ] Too late! You'll have to try again, I'm affraid.",bc_map, 0xFF0000;
			summon_normal( 3 );
		}
		else
		{
			mapannounce instance_mapname( "5@ws", instance_id() ), "[ Wizarding School ] You all failed this year...",bc_map, 0xFF0000;
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw3", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@map$ ){
					warp .@nmap$, .@nx, .@ny;
				}
				
			set $wsCourse3Level, 0;	
		}
	}
	end;
	
OnRatDeath:
	set .@map$, instance_mapname( "5@ws", instance_id() );
	$course3ChanceUp++;
	killmonsterall .@map$;
	$wsCourse3Level++;
	summon_normal( 3 );
	end;
	
OnCourse3Death:	
	set .@map$, instance_mapname( "5@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse3Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse3Level++;
		summon_normal( 3 );
	}
	end;
	
OnCourse2Death:	
	set .@map$, instance_mapname( "4@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse2Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse2Level++;
		summon_normal( 2 );
	}
	end;

OnStompingTreeDeath:
	dispbottom "[ Professor ] NO! This tree worth lot more than you do! Get away, you fool! Out of my sight!";
	charcommand "#load " + strcharinfo(0);
	end;
	
OnGiantSnakeDeath:
	getitem $snakeFangId, 1;
	$wsCourse2Level++;
	summon_normal( 2 );	
	end;

OnMirrorDeath:
	//apply a random hard reduction to life point of killing player
	specialeffect 512;
	percentheal 0-rand(80), 0-rand(80);
	end;

OnGoodMirrorDeath:
	set .@map$, instance_mapname( "3@ws", instance_id() );
	killmonsterall .@map$;
	$wsCourse1Level++;
	summon_normal( 0 );
	end;

OnKeyDeath:
	//nothing, used to clean
	end;

OnGoodKeyDeath:
	set .@map$, instance_mapname( "3@ws", instance_id() );
	killmonsterall .@map$;
	$wsCourse1Level++;
	summon_normal( 0 );
	end;

OnGuardianDeath:
	set .@map$, strcharinfo(3);
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnGuardianDeath";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		set .@seekedMap$, instance_mapname( "3@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			//Course 1, last ordeal complete, get Stone
			getitem $course1StoneId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Wicked Professor has been defeated. The Stone has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
		}
		set .@seekedMap$, instance_mapname( "4@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			//Course 2, last ordeal complete, get Diary
			getitem $course2DiaryId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Giant Snake has been defeated. The Diary has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw2", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
		}
		set .@seekedMap$, instance_mapname( "5@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			//Course 3, last ordeal complete, get Hourglass
			getitem $course3HourglassId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Gryphon's Bourreau has been defeated. The Hourglass has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw3", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
		}
		set .@seekedMap$, instance_mapname( "6@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			killmonsterall .@seekedMap$;
			//Course 4, last ordeal complete, get Cup
			getitem $course4CupId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Cimetery has been defeated. The Cup has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw4", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
		}
		set .@seekedMap$, instance_mapname( "7@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			killmonsterall .@seekedMap$;
			//Course 5, last ordeal complete, get Diadem
			getitem $course5DiademId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Ministry has been defeated. The Diadem has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw5", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
		}
		set .@seekedMap$, instance_mapname( "8@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			killmonsterall .@seekedMap$;
			//Course 6, last ordeal complete, get Pendant
			getitem $course6NoteId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Ministry has been defeated. The Pendant has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw6", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
		}
		set .@seekedMap$, instance_mapname( "9@ws", instance_id() );
		if(.@map$ == .@seekedMap$)
		{
			//Course 7, last ordeal complete, get Snake Scale
			getitem $course7ScaleId, 1;
			instance_announce instance_id(), "[ Wizarding School ] the Dark Army has been defeated. The Scale has been retrieved.", bc_all, 0x00FF00;
			
			getmapxy(.@nmap$, .@nx, .@ny, UNITTYPE_PC, instance_npcname( "alawsw7", instance_id() );
			
			getguildmember getcharid(2),2;
			for( set .@i, 0; .@i < $@guildmembercount; set .@i, .@i+1 )
				if( attachrid( $@guildmemberaid[.@i] ) && strcharinfo(3) == .@seekedMap$ ){
					warp .@nmap$, .@nx, .@ny;
				}
				
			donpcevent instance_npcname( "wizarding_school", instance_id() ) + "::OnLastFloorOn";	
		}
	}
	end;
	
OnCourse2Death:	
	set .@map$, instance_mapname( "4@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse2Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse2Level++;
		summon_normal( 2 );
	}
	end;

OnCourse1Death:
	set .@map$, instance_mapname( "3@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnCourse1Death";
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		$wsCourse1Level++;
		summon_normal( 1 );
	}
	end;

OnOwlDeath:
	dispbottom "Hou! Hou! There's nothing bound to it's claws...";
	instance_announce instance_id()," [ Owls ] There's still "+(.monster_count+.monster_event)+" free owls !",bc_map,0x0000FF;
	end;
		
OnGoodOwlDeath:
	set .@map$, instance_mapname( "1@ws", instance_id() );
	set .@npcname$, instance_npcname( strnpcinfo(0), instance_id() );
	set .@label$, .@npcname$ + "::OnGoodOwlDeath";
	
	dispbottom "Hou! Hou! There's something bound to it's claws! How lucky!";
	instance_announce instance_id()," [ Owls ] "+strcharinfo(0)+" found a Owl with a letter bound!",bc_all,0x0000FF;	
	
	getitem $owlLetterId, 1;
	
	set .@mobCount, mobcount(.@map$, .@label$);
	if(.@mobCount == 0)
	{
		//go to next stage
		removemapflag .@map$, 12;
		removemapflag .@map$, 0;
		removemapflag .@map$, 3;
		removemapflag .@map$, 4;
		removemapflag .@map$, 15;
		removemapflag .@map$, 1;
		removemapflag .@map$, 13;
		removemapflag .@map$, 31;
		killmonsterall .@map$;
	}
	end;	
	
OnFirstFloorOn:
	summon_normal( 0 );
	end;
	
OnStartCourse1:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The First Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 1 );
	end;
	
OnStartCourse2:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Second Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 2 );
	end;
	
OnStopTrees:
	$wsCourse2Level++;
	sleep2 1500;
	summon_normal( 2 );
	end;
	
OnStartCourse3:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Third Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 3 );
	end;
	
OnStartCourse4:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Fourth Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 4 );
	end;
	
OnStartCourse5:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Fifth Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 5 );
	end;
	
OnStartCourse6:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Sixth Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 6 );
	end;
	
OnStartCourse7:
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Seventh Course is about to start.",bc_map, 0xFF0000;
	sleep2 1500;
	summon_normal( 7 );
	end;
	
OnLastFloorOn:
	sleep2 15000;
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Wizarding School ] The Last Course is about to start. Please gather in central Hall.",bc_map, 0xFF0000;
	sleep2 1500;	
	mapannounce instance_mapname( "3@ws", instance_id() ), "[ Dark Lord ] So I can kill you all more easily!",bc_map, 0xFF0000;
	summon_boss( );
	end;
}

4@ws,145,145,3	Roots::alawsro	CLEAR_NPC,{
	mes "[ Roots ]";
	mes "You've reached the Roots.";
	mes "What do you wanna do?";
	if(select("Push the Roots","Pull the Roots") == .randEffect)
	{
		next;
		mes "[ Roots ]";
		mes "Good, the Trees stopped.";
		killmonsterall strnpcinfo(4);
		donpcevent instance_npcname( "wizarding_school", instance_id() ) + "::OnStopTrees";
	}
	else
	{
		next;
		mes "[ Roots ]";
		mes "Nothing happened...Oh wait, it did!";
		mes "The Trees are even more disturbed!";
		percentheal -50, -50;
		mes "You've been hit on the head!";
		sc_start SC_STUN,15000,0;
	}
	close;

OnInstanceInit:
	disablenpc strnpcinfo(3);
	set .randEffect, rand(1,2);
	end;
}

6@ws,145,145,3	Golden Egg Keeper::alawsge	4_M_MAGE,{
	mes "[ Minovr ]";
	mes "What are you doing here?";
	mes "What do you wanna do?";
	if(select("Hydrate it","Destroy it") == 1)
	{
		next;
		mes "[ Minovr ]";
		if(countitem($waterId) > 0)
		{
			mes "Go on this way!";
			set $course4EggLife, $course4EggLife - countitem($waterId);
			delitem $waterId, countitem($waterId);
			if($course4EggLife <= 0)
			{
				killmonsterall strnpcinfo(4);
				donpcevent instance_npcname( "wizarding_school", instance_id() ) + "::OnCourse4EggFilled";
			}
		}
		else
		{
			mes "You don't have what's needed...";
		}
	}
	else
	{
		next;
		mes "[ Minovr ]";
		mes "Why? Why would you do that?";
	}
	close;

OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

5@ws,145,145,3	Time Backer Carer::alawstb	4_M_MAGE,{
	mes "[ Horg ]";
	mes "You've got some sand?";
	mes "What do you wanna do?";
	if(select("Give it","Destroy it") == 1)
	{
		next;
		mes "[ Horg ]";
		set $course3ChanceUp, $course3ChanceUp + countitem($sandId);
		delitem $sandId, countitem($sandId);
	}
	else
	{
		next;
		mes "[ Horg ]";
		mes "Why? Why would you do that?";
		delitem $sandId, countitem($sandId);
	}
	close;

OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

4@ws,145,145,3	Notes::alawsno	CLEAR_NPC,{
	mes "[ Notes Book ]";
	mes "You've reached the Note Book.";
	mes "What do you wanna do?";
	if(select("Read it","Destroy it") == 1)
	{
		next;
		mes "[ Notes Book ]";
		mes "Good, the Trees stopped.";
		killmonsterall strnpcinfo(4);
		donpcevent instance_npcname( "wizarding_school", instance_id() ) + "::OnStopTrees";
	}
	else
	{
		next;
		mes "[ Notes Book ]";
		if(countitem($snakeFangId) < 0)
		{
			mes "It works by stabbing it with the fang!";
			delitem $snakeFangId, 1;
			mapannounce strnpcinfo(4), "[ Ghost ] NOOOOOOOOOOOOOOOOOOOOOOO! I won't lose that easily!", bc_map, 0xFF0000;
			unitskilluseid $course2Id,"NPC_INVINCIBLEOFF",1;
			disablenpc strnpcinfo(3);
		}
		else
		{
			mes "You're trying to ripp it appart, but you simply can't...";
		}
	}
	close;

OnInstanceInit:
	disablenpc strnpcinfo(3);
	end;
}

1@ws,145,145,3	Security Guard::alawseg	852,{
	if(countitem($owlLetterId) > 0)
	{
		mes "[Security Guard]";
		mes "Hey...You've got an owl letter, don't you?";
		mes "Then you should go to the real School!";
		mes "What? Don't tell me you believed this was the real one, aha!";
		mes "Do you want to get there?";
		if(select("Yes","No") == 1)
		{
			next;
			mes "[Security Guard]";
			mes "Allright, get ready, I'll send you there in a while.";
			warp instance_mapname("2@ws", instance_id()), x, y;
		}
		next;
	}
	else{ 
		mes "[Security Guard]";
		mes "Hum...Do you have any business to do inside the School?";
		mes "Cause I can't any letter that will authorize me to let you in...";
		mes "Come back when you'll get one.";
	}
	close;

OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	HeadMaster::alawshm	852,{
	set .@npcname$, "[ HeadMaster ]";
	mes .@npcname$;
	if(.talking == 0)
	{
		set .talking, 1;
		mes "What can I do for you, my child?";
		if(select("Can I change my course?","Who are you?") == 1)
		{
			next;
			mes .@npcname$;
			mes "Hum...To change your course, I'll need some time.";
			mes "See, even for me, there's a lot of paper to fill...";
			mes "Allright. You'll receive an owl when it'll be okay.";
			addtimer 300000, strnpcinfo(3) + "::OnResetCourse";
			hideonnpc strnpcinfo(3);
		}
		else
		{
			next;
			mes .@npcname$;
			mes "I'm the Headmaster. I'm the one in charge of...Well almost everything here.";
			mes "Come see me if you have a problem.";
			mes "If I'm available, I might be able to fix it.";
		}
	}
	else
	{
		mes "Sorry, child, but I'm a bit busy right now...";
	}
	close;
	
OnTimer300000:
	hideoffnpc strnpcinfo(3);
	end;

OnResetCourse:
	set WSCURRENTCOURSE$, "0";
	end;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	set .talking, 0;
	end;
}

2@ws,145,145,3	Professor::alawsp	852,{
	set .@npcname$, "[ Professor ]";
	mes .@npcname$;
	if(.talking == 0)
	{
		set .talking, 1;
		mes "Show me your invitation letter, please.";
		next;
		charcommand "#me " + strcharinfo(0) + " here it is.";
		next;
		mes .@npcname$;
		mes "Thank you.";
		mes "You're here in Torgawh, the Wizarding School.";
		mes "Hidden from normal mortal being, it provides lessons and knowledge to peoples able to find it.";
		next;
		charcommand "#me " + strcharinfo(0) + " I just got this letter from an owl...";
		next;
		mes .@npcname$;
		mes "Don't underestimate us. You were chosen by the owl, not the other way.";
		mes "You'll find here some usefull tips and tricks.";
		mes "You may encounter lessons of potions, magical objects creation and enchant.";
		mes "Transformation, fly, learn how to fight against dark magic...";
		mes "You'll see that soon enough.";
		next;
		mes .@npcname$;
		mes "First let's choose you a house to belong to.";
		mes "It'll become your new family.";
		mes "Right, now put this hat.";
		
		progressbar 0x00FF00, 10; 
		
		set .@rand, rand(0,5);
		switch(.@house)
		{
			case 1:
				set WSHOUSE$, "Diggleby";
				specialeffect 512;
				break;
			case 2:
				set WSHOUSE$, "Diggleby";
				specialeffect 512;
				break;
			case 3:
				set WSHOUSE$, "Diggleby";
				specialeffect 512;
				break;
			case 4:
				set WSHOUSE$, "Diggleby";
				specialeffect 512;
				break;
			case 5:
				set WSHOUSE$, "Diggleby";
				specialeffect 512;
				break;
			default:
				set WSHOUSE$, "Diggleby";
				specialeffect 512;
				break;			
		}
		
		next;
		set .@npcname$, "[ Professor ]";
		mes .@npcname$;
		mes "So you're a " + WSHOUSE$ + ", hu?";
		mes "Wouldn't have say that...";
		mes "Anyway. You're now ready. Discover the School, and grow!";
		mes "And please...Don't get yourself expelled...";
		
		set .talking, 0;
	}
	else
	{
		mes "Don't run in the hall.";
		mes "Get to your lesson now, or wait til I'm over with my current discussion.";
	}
	close;

OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	set .talking, 0;
	end;
}

2@ws,145,145,3	Student::alawss	852,{
	set .@npcname$, "[ Student ]";
	mes .@npcname$;
	mes "I'm here for four years...There's still plenty to learn.";
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	Student::alawss2	852,{
	set .@npcname$, "[ Student ]";
	mes .@npcname$;
	mes "you're a " + WSHOUSE$ + "? Get away from me!";
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	Student::alawss3	852,{
	set .@npcname$, "[ Student ]";
	mes .@npcname$;
	mes "Why is there so much hate between the houses...I don't understand.";
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	Professor::alawsp2	852,{
	set .@npcname$, "[ Professor ]";
	mes .@npcname$;
	mes "You shouldn't lose your time like this.";
	mes "To lesson! Now!";
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	Student::alawss4	852,{
	set .@npcname$, "[ Student ]";
	mes .@npcname$;
	mes "I'm in a hurry to fight against trolls or monsters!";
	mes "I've learned everything for it!";
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	Student::alawss5	852,{
	set .@npcname$, "[ Student ]";
	mes .@npcname$;
	mes "Please...Please no more potions lessons...";
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	warp#1_7_3@ws_x_y::alawsw	WARP_NPC,3,3,{
	end;
	
OnTouch:	
	set .@npcname$, "[ Wizarding School ]";
	mes .@npcname$;
	explode(.@str$, strnpcinfo(2), "_");
	mes "This is the entrance to course n°" + .@str$[0] + ".";
	mes "Only " + .@str$[1] + " students can enter at a time.";
	mes "They'll be chosen randomly from the subscribed.";
	if(WSCURRENTCOURSE$ != "0" && WSCURRENTCOURSE$ != .@str$[0])
	{
		next;
		mes .@npcname$;
		mes "You can't take several course in the same time.";
		mes "Wait for the course to end, or go to the Headmaster to ask for a course change.";
		close;
	}
	mes "Do you wish to enter?";
	if(select("Yes","No") == 1)
	{
		warp instance_mapname(.@str$[2], instance_id()), atoi(.@str$[3]), atoi(.@str$[4]);
		setd("$wscourse" + .@str$[0], getd("$wscourse" + .@str$[0]) + 1);
		if(getd("$wscourse" + .@str$[0]) == atoi(.@str$[1]))
		{
			disablenpc strnpcinfo(3);
			donpcevent instance_npcname( "wizarding_school", instance_id() ) + "::OnStartCourse" + .@str$[0];
		}
		set WSCURRENTCOURSE$, .@str$[0];
	}
	close;
	
OnInstanceInit:
OnEnable:
	enablenpc strnpcinfo(3);
	end;
}

2@ws,145,145,3	duplicate(alawsw)	warp#2_7_4@ws_x_y::alawsw2	WARP_NPC,3,3
2@ws,145,145,3	duplicate(alawsw)	warp#3_7_4@ws_x_y::alawsw3	WARP_NPC,3,3
2@ws,145,145,3	duplicate(alawsw)	warp#4_7_4@ws_x_y::alawsw4	WARP_NPC,3,3
2@ws,145,145,3	duplicate(alawsw)	warp#5_7_4@ws_x_y::alawsw5	WARP_NPC,3,3
2@ws,145,145,3	duplicate(alawsw)	warp#6_7_4@ws_x_y::alawsw6	WARP_NPC,3,3
2@ws,145,145,3	duplicate(alawsw)	warp#7_7_4@ws_x_y::alawsw7	WARP_NPC,3,3